"""Database module for the Research AI project.

This package provides a modular database layer with SQLAlchemy async support.
All database models, enums, and operations are organized into separate modules.
"""

from .connection import engine, SessionLocal, init_db
from .enums import UserPlan, TaskStatus
from .models import (
    Base,
    User,
    UserTask,
    RateLimitRecord,
    TaskQueue,
    TaskStatistics,
    SearchQuery,
    Finding,
    # Legacy models still used by agent
    ResearchTopic,
    ArxivPaper,
    PaperAnalysis,
    UserSettings,
    AgentStatus,
)
from .operations import (
    # User operations
    get_or_create_user,
    upgrade_user_plan,
    reset_daily_counters_if_needed,
    check_user_can_create_task,
    # Rate limiting operations
    check_rate_limit,
    # Queue operations
    add_task_to_queue,
    update_queue_positions,
    get_next_task_from_queue,
    # Task operations
    create_user_task_with_queue,
    create_user_task,
    get_user_tasks,
    update_user_task_status,
    update_user_task_status_for_user,
    deactivate_user_tasks,
    list_active_user_tasks,
    get_most_recent_active_user_task,
    # Statistics operations
    get_or_create_task_statistics,
    update_task_statistics,
    # Legacy operations (for agent compatibility)
    get_user_settings,
    get_or_create_user_settings,
    update_user_settings,
    create_research_topic,
    get_active_topic_by_user,
    list_active_topics,
    get_topic_by_user_and_text,
    create_arxiv_paper,
    get_arxiv_paper_by_arxiv_id,
    create_paper_analysis,
    has_paper_analysis,
    list_new_analyses_since,
    get_analysis_with_entities,
    mark_analysis_notified,
    mark_analysis_queued,
    list_recent_analyses_for_user,
    update_agent_status,
    get_agent_status,
    count_analyses_for_user,
    count_relevant_analyses_for_user,
    swap_user_active_topics,
    deactivate_user_topics,
    # Generic task operations (legacy)
    create_task,
    list_pending_tasks,
    mark_task_completed,
    mark_task_failed,
    list_completed_tasks_since,
    mark_task_sent,
    get_task,
    # Search query operations
    list_active_queries_for_task,
    create_search_query,
    update_search_query_stats,
    record_finding,
    list_user_tasks,
    # Integration functions
    get_next_queued_task,
    start_task_processing,
    complete_task_processing,
    create_research_topic_for_user_task,
    link_analysis_to_user_task,
    get_user_task_results,
    cleanup_orphaned_queue_entries,
)

# Backward compatibility
from .connection import ensure_connection

__all__ = [
    # Connection
    "engine",
    "SessionLocal",
    "init_db",
    "ensure_connection",
    # Enums
    "UserPlan",
    "TaskStatus",
    # Models
    "Base",
    "User",
    "UserTask",
    "RateLimitRecord",
    "TaskQueue",
    "TaskStatistics",
    "SearchQuery",
    "Finding",
    "ResearchTopic",
    "ArxivPaper",
    "PaperAnalysis",
    "UserSettings",
    "AgentStatus",
    # Operations
    "get_or_create_user",
    "upgrade_user_plan",
    "reset_daily_counters_if_needed",
    "check_user_can_create_task",
    "check_rate_limit",
    "add_task_to_queue",
    "update_queue_positions",
    "get_next_task_from_queue",
    "create_user_task_with_queue",
    "get_user_tasks",
    "update_user_task_status",
    "update_user_task_status_for_user",
    "deactivate_user_tasks",
    "list_active_user_tasks",
    "get_most_recent_active_user_task",
    "get_or_create_task_statistics",
    "update_task_statistics",
    "get_user_settings",
    "get_or_create_user_settings",
    "update_user_settings",
    "create_research_topic",
    "get_active_topic_by_user",
    "list_active_topics",
    "get_topic_by_user_and_text",
    "create_arxiv_paper",
    "get_arxiv_paper_by_arxiv_id",
    "create_paper_analysis",
    "has_paper_analysis",
    "list_new_analyses_since",
    "get_analysis_with_entities",
    "mark_analysis_notified",
    "mark_analysis_queued",
    "list_recent_analyses_for_user",
    "update_agent_status",
    "get_agent_status",
    "count_analyses_for_user",
    "count_relevant_analyses_for_user",
    "swap_user_active_topics",
    "deactivate_user_topics",
    "create_task",
    "list_pending_tasks",
    "mark_task_completed",
    "mark_task_failed",
    "list_completed_tasks_since",
    "mark_task_sent",
    "get_task",
    "list_active_queries_for_task",
    "create_search_query",
    "update_search_query_stats",
    "record_finding",
    "list_user_tasks",
    # Integration functions
    "get_next_queued_task",
    "start_task_processing",
    "complete_task_processing",
    "create_research_topic_for_user_task",
    "link_analysis_to_user_task",
    "get_user_task_results",
    "cleanup_orphaned_queue_entries",
    # Legacy function
    "create_user_task",
]
